@page "/AllBooksList"
@using Newtonsoft.Json;
@using WebbDesignBlazorLabb3.Shared;

@inject HttpClient client;
@inject NavigationManager UriHelper

<AuthorizeView>
	<Authorized>
<h3>Edit Books</h3>


<table class="table table-striped table-hover">
	<thead>
	<tr>
	  <th scope="col">ISBN</th>
	  <th scope="col">Title</th>
	  <th scope="col">Author</th>
	  <th scope="col">Operations</th>
	</tr>
  </thead>
  <tbody>
		<Virtualize Items="BookList" Context="book">
		<tr>
		  <th scope="row">@book.Isbn</th>
		  <th scope="row">@book.Title</th>
		  <th scope="row"> 
			  @foreach (var auth in book.Authors)
					{
						@auth
					}
			  </th>
		  <div class="btn-group-lg">
					<button class="btn btn-warning" @onclick="() => GoToEdit(book.Isbn)"> Edit </button>
					<button class="btn btn-outline-danger" @onclick="() => DeleteBook(book.Isbn)"> Delete </button>
		  </div>
		</tr>
	</Virtualize>
	</tbody>
</table>
	</Authorized>
	<NotAuthorized>
		<p> You are not logged in! </p>
	</NotAuthorized>
</AuthorizeView>

@code {
	List<BookDto> BookList = new();

	protected override async Task OnInitializedAsync()
	{
		await GetAllBooks();
	}

	private async Task GetAllBooks()
	{
		BookList = (await client.GetFromJsonAsync<IEnumerable<BookDto>>("book/getAll")).ToList();
	}

	private void GoToEdit(long isbn)
	{
		UriHelper.NavigateTo($"Editbook/{isbn}");
	}
	private async void DeleteBook(long isbn)
	{
		await client.DeleteAsync($"book/delete/{isbn}");
		await GetAllBooks();
		StateHasChanged();
	}

}
